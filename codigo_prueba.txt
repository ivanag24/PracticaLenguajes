/*
Caso incorrecto de prueba 1
*/

#define MENSAJE "Hola mundo";
integer __ = 2;
integer b;

integer suma(integer sumando1, sumando2){  // funcion que devuelve la suma de dos numeros
    integer resultado;
    resultado = a + b;
    return(resultado)
}

void Main {
     println(MENSAJE);
     b = 3;
     println(suma(a, b*a));
}

----------------------------------------------------------------------------------------------------

/*
Caso correcto de prueba 1
*/

#define MENSAJE "Hola mundo"
integer a = 2;
integer b;

integer suma(integer sumando1, integer sumando2){  // funcion que devuelve la suma de dos numeros
    integer resultado;
    resultado = a + b;
    return(resultado);
}

void Main () {
     println(MENSAJE);
     b = 3;
     println(suma(a, b*a));
}

----------------------------------------------------------------------------------------------------

/*
Caso correcto de prueba 2
*/

#define FECHA
#define CODIGO 10
integer n_alumnos;
float __valor_real;
string nombre = "alumno1";

string codificar_cadena(string cadena, integer desplazamiento){
    string cadena 2;
    cadena2 = (cadena + desplazamiento) * random(desplazamiento);
    return(cadena2);
}

void save(string nombre){
    fopen("file.txt", "w");
    printf(nombre);
}

void Main (){
    string codificado;
    codificado = codificar_cadena(nombre, FECHA);
    save(codificado)[1];
    n_alumnos = n_alumnos + 1;
    codificado = codificar_cadena(nombre, (CODIGO DIV codificado));
}

----------------------------------------------------------------------------------------------------

/*
Caso correcto de prueba 2
*/

#define FECHA 2023
#define CODIGO 10
integer n_alumnos;
float __valor_real;
string nombre = "alumno1";

string codificar_cadena(string cadena, integer desplazamiento){
    string cadena2;
    cadena2 = (cadena + desplazamiento) * random(desplazamiento);
    return(cadena2);
}

void save(string nombre){
    fopen("file.txt", "w");
    printf(nombre);
}

void Main (){
    string codificado;
    codificado = codificar_cadena(nombre, FECHA);
    save(codificado);
    n_alumnos = n_alumnos + 1;
    codificado = codificar_cadena(nombre, (CODIGO DIV codificado));
}

----------------------------------------------------------------------------------------------------

/*
Caso incorrecto de prueba 3
*/

#define N1 1
#define N2 1

void fibonacci(integer n_numeros){
    if(n_numeros >= 1){
        printf(N1);
    }
    if(n_numeros >=2){
        printf(N2);
    }
    integer aux;
    for(integer i = 3, i <= n_numeros, i = i + 1){
        aux = N1 + N2;
        printf(aux);
        N1 = N2;
        N2 = aux;
    }
}

void Main() {
    #define N 10
    fibonacci(N);
}

----------------------------------------------------------------------------------------------------

/*
Caso correcto de prueba 3
*/

integer n1 = 1;
integer n2 = 1;

void fibonacci(integer n_numeros){
    if(n_numeros >= 1){
        printf(n1);
    }
    if(n_numeros >=2){
        printf(n2);
    }
    integer aux;
    for(integer i = 3; i <= n_numeros; i = i + 1){
        aux = n1 + n2;
        printf(aux);
        n1 = n2;
        n2 = aux;
    }
}

void Main() {
    integer n = 10;
    fibonacci(n);
}

----------------------------------------------------------------------------------------------------

/*
Caso incorrecto de prueba 4
*/

struct {
    #define N_PALABRAS 10;
    string p1 = "comida";
    string p2 = "gato";
    string p3 = "telefono";
    string p4 = "casa";
    string p5 = "ordenador";
    string p6 = "pantalla";
    string p7 = "raton";
    string p8 = "ventana";
    string p9 = "cama";
    string p10 = "lampara";
} diccionario;
integer n;

void imprimir_palabras(){
    n = diccionario(1);
    if(n > 2){
        integer i = 2;
        do{
            if(length(diccionario(i)) > 5){
                printf(diccionario(i));
            }
            i = i + 1;
        }while(i < n);
    }
}

----------------------------------------------------------------------------------------------------

/*
Caso correcto de prueba 4
*/

struct {
    integer n_palabras = 10;
    string p1 = "comida";
    string p2 = "gato";
    string p3 = "telefono";
    string p4 = "casa";
    string p5 = "ordenador";
    string p6 = "pantalla";
    string p7 = "raton";
    string p8 = "ventana";
    string p9 = "cama";
    string p10 = "lampara";
} diccionario;
integer n;

void Main(){
    n = diccionario(1);
    if(n > 2){
        integer i = 2;
        do{
            if(length(diccionario(i)) > 5){
                printf(diccionario(i));
            }
            i = i + 1;
        }while(i < n);
    }
}

----------------------------------------------------------------------------------------------------